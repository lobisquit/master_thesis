#+STARTUP: latexpreview

# bibliography:material.bib

* ANALOGY Virtual Network Overlay as group of organizers of a fair

- people coming in are packets to be forwarded

- one all-knowing person cannot deal with all their specific needs, so
  - many people deal with simple tasks, redirecting visitors to common destinations
  - difficult (unusual) ones are sent to their supervisor, who knows more things
  - again, unusual requests are sent up to the supervisor of the supervisor, and so on

- the director has to be sure that all staff knows its needed information ~> controller

- a responsible is given the task to check if everybody is working properly (no congestion, no problems) and tell the director in case ~> monitor

* Traffic generation techniques, from "A Survey on the Common Network Traffic Sources Models"
** Bound (envelope) source traffic models
*** Deterministic Bound Interval Independent
    Traffic function $A$ is limited by $A*$: $$ A[t,\, t + \tau] \le A^*(\tau) $$: deterministic and time-invariant bound.
    cite:ChengShangChang1994

*** Stochastic Bound Traffic Models
    Bound is *not* deterministic, but in probability: traffic function is likely to be smaller than the bound.

*** BIND Traffic Model

** Unbound (exact) Source Models

*** Poisson Distribution Model

*** Pareto Distribution Process

*** Markov Modulated Poisson Process

*** Markov Modulated Fluid Models

*** Autoregressive Models

*** Wavelet-based Models

*** Traffic Models Using Chaotic Maps
    ex. Piecewise Linear Maps

*** N-Burst Traffic Model
    Sum of N independent ON-OFF sources

* TODO thesis [0/3]
- [-] study WIDE dataset [1/3]
  - [X] preprocess dataset
  - [ ] study non-stationarity, and nice properties of the data cite:Anderson2017
  - [ ] obtain a realistic packet generator (ON/OFF, ...) that fits the data (see [[https://www.nsnam.org/docs/release/3.3/doxygen/application.html][here]] for ns3: seems reasonable)
- [ ] design wanted core network [0/2]
  - [ ] choose between OpenFlow and theoric routing optimization
  - [ ] write NS3 code
- [ ] learn how to optimize the network
  - [ ] write a reinforcement learning algo
  - [ ] run it

* things I have found
- o'Reilly book on MPLS/SDN: nice overwiev of the protocol cite:Szarkowicz2015
- overwiev on traditional packet generation techniques
- internet flows are not always stationary, gaussian and linear cite:Marnerides2018,Cao2001
- non-stationarity can be modeled using
  - Transformed Arma Models cite:Laner2014
  - time variant Poisson processed cite:Karagiannis2004
  - MFSG, GFSD cite:Anderson2017 (best paper, super recent)
